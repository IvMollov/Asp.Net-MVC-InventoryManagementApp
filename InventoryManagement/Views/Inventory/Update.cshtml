@model Inventory.DataAccess.Entities.InventoriesManagement
@{
    ViewBag.Title = "Update";
}

<h3>Update</h3>
@using (Html.BeginForm("Update", "Inventory", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h1>Item Detail</h1>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.InventoryID)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class ="control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new{ @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new{htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new {@class= "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class ="control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new {  @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class ="text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class ="control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class ="text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2" >
            <b>Single Price</b>
                </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SinglePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SinglePrice, "", new { @class ="text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class ="control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new {  @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Picture, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="data:image/png;base64,@Html.CreateBase64Image(Model.Picture)" width="170" class="media-photo"><br>
                <input style="margin-top:20px" type="file" id="image" name="image" />

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </div>
    </div>


<div>
    <a class="btn btn-info btn-sm" href="@Url.Action("List", "Inventory")">Back To Inventory List</a>
</div>

}


